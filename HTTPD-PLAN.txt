## How the HTTPD is designed ##

The pagekite.py HTTPD does:

1. XML-RPC for anything to do with controlling pagekite.py, so the
   interface can be shared between an AJAX Web-UI and a normal GUI,
   or even accessed remotely. Look into serving CORS headers to allow
   direct integration with pagekite.net/home/.

2. Static file server.

3. Embedded static files (for the default UI).

4. /vars.txt for monitoring.  Make optional?


### Sharing files ###

Aside from the embedded static stuff, the served static content should
be dynamically created at runtime (but persisted to disk?).

Should support arbitrary http://vhost/path -> /local/fs/path mappings.


### Access controls ###

Shared files and directories *could* have access controls based on:

  * One-off passwords
  * Username/password pairs
  * OpenID, Facebook connect, Twitter
  * Autogenerated obscure URLs
  * Guest IP address
  * SSL certificates
  * Time (files could expire)
  * Access counts (files could expire)

